set shell=/bin/sh
set so=7
set ai
set expandtab
set tabstop=2
set shiftwidth=2
set background=dark
set autoindent
set smartindent
set title
set restorescreen 
set incsearch
set hlsearch
set ignorecase
set smartcase
set wildmode=longest,list,full
set wildmenu
set showcmd
set report=0
set number
set lazyredraw
set ttyfast
hi LineNr ctermfg=grey guifg=Black
hi SignColumn ctermbg=232
syntax on
syntax enable
filetype on
filetype plugin indent on
map <C-s> :execute "vimgrep /" . expand("<cword>") . "/j **" <Bar> cw<CR>
silent !stty -ixon > /dev/null 2>/dev/null
au BufNewFile,BufRead *.ms set filetype=javascript
au BufNewFile,BufRead *.pegjs set filetype=javascript
au BufNewFile,BufRead *.cap set filetype=ruby
au BufNewFile,BufRead *.ejs set filetype=html
autocmd BufNewFile,BufRead Gemfile set filetype=ruby
hi Search cterm=NONE ctermfg=DarkRed ctermbg=DarkBlue
highlight Pmenu ctermbg=DarkGrey ctermfg=White
highlight PmenuSel ctermbg=DarkGreen ctermfg=Black

"Press return to temporarily get out of a highlighted search
nnoremap <CR> :nohlsearch<CR>

" Pathogen
execute pathogen#infect()

" Clojure
let g:rbpt_colorpairs = [
    \ ['brown',       'RoyalBlue3'],
    \ ['darkgreen',   'firebrick3'],
    \ ['darkcyan',    'RoyalBlue3'],
    \ ['darkred',     'SeaGreen3'],
    \ ['darkmagenta', 'DarkOrchid3'],
    \ ['brown',       'firebrick3'],
    \ ['darkcyan',    'SeaGreen3'],
    \ ['gray',        'RoyalBlue3'],
    \ ['darkmagenta', 'DarkOrchid3'],
    \ ['Darkblue',    'firebrick3'],
    \ ['darkred',     'DarkOrchid3'],
    \ ['darkcyan',    'SeaGreen3'],
    \ ['gray',        'RoyalBlue3'],
    \ ['darkgreen',   'RoyalBlue3'],
    \ ['darkgray',    'DarkOrchid3'],
    \ ['Darkblue',    'SeaGreen3'],
    \ ]

au VimEnter * RainbowParenthesesToggle
au Syntax * RainbowParenthesesLoadRound
au Syntax * RainbowParenthesesLoadSquare
au Syntax * RainbowParenthesesLoadBraces

let mapleader = ","

" Better ctrl-p mappings
let g:ctrlp_prompt_mappings = {
    \ 'PrtSelectMove("j")':   ['<c-j>', '<c-n>'],
    \ 'PrtSelectMove("k")':   ['<c-k>', '<c-p>'],
    \ 'PrtHistory(-1)':       ['<down>'],
    \ 'PrtHistory(1)':        ['<up>'],
    \ }"

let g:ctrlp_custom_ignore = {
  \ 'dir':  '\v[\/]\.(git|hg|svn|target)$',
  \ 'file': '\v\.(exe|so|dll|log|class)$',
  \ }

" Fish
autocmd FileType fish compiler fish

